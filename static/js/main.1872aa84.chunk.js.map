{"version":3,"sources":["assets/banner.png","services/riot.js","utils/championsData.js","reducers/portalReducer.js","components/ChampionInfo/index.js","contexts/ChampionsContext.js","components/Searcher/index.js","components/ChampionItem/index.js","components/ChampionsItemsPlaceholder/index.js","components/ChampionsTable/index.js","App.js","index.js"],"names":["Constants","getGameVersion","a","fetch","resp","json","versions","getChampionsURL","gameVersion","replaceVersion","url","version","replace","parseChampionsToArray","championsObj","array","Object","keys","data","forEach","k","push","getChampions","champions","getChampionImageURL","champion","championImageFile","image","full","getChampionLoadingImageURL","id","retrieveListData","c","title","name","description","charAt","toUpperCase","slice","Types","portalReducer","state","action","type","isOpen","ChampionInfo","portalDispatch","useContext","ChampionsContext","useState","useEffect","body","document","querySelector","style","overflow","className","Icon","onClick","color","Header","size","as","tags","map","tag","i","Transition","alignSelf","src","alt","createContext","initialChampionsState","initialPortalState","ChampionsProvider","children","setChampions","useReducer","portal","setTimeout","fillData","Provider","value","TransitionablePortal","transition","animation","duration","open","Searcher","context","isLoading","setIsLoading","results","setResults","setValue","openChampionInfo","e","search","result","Grid","stackable","Column","width","Logo","hidden","Search","minCharacters","loading","onSearchChange","target","filter","toLowerCase","indexOf","splice","noResultsMessage","onResultSelect","fluid","FastAverageColor","Fac","ChampionItem","nameTag","useRef","card","current","getColorAsync","boxShadow","rgba","getColor","Ref","innerRef","ref","ChampionItemPlaceholder","Placeholder","PlaceholderImage","ChampionsTable","doubling","centered","columns","length","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1872aa84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.0b3d950e.png\";","/**\r\n * @typedef {Object} Champion\r\n * @property {String} version - version of the data retrieved to the champion\r\n * @property {String} id - champion's unique id\r\n * @property {String} key - a weird key for the champion\r\n * @property {String} name - champion's name\r\n * @property {String} title - champion's description\r\n * @property {String} blurb - little history about the champion\r\n * @property {Object} info - initial game stats\r\n * @property {Object} image - this is some cool string\r\n * @property {Array<String>} tags - the roles the champion is used to play\r\n * @property {String} partype - the resource the champion's spells use\r\n * @property {Object} stats - a complex object fulfiled with champion's stats\r\n */\r\n\r\n\r\nconst Constants = {\r\n  VERSION_URL: \"https://ddragon.leagueoflegends.com/api/versions.json\",\r\n  CHAMPIONS_URL: \"https://ddragon.leagueoflegends.com/cdn/{version}/data/es_AR/champion.json\",\r\n  CHAMPION_LOADING_IMG_URL: \"https://ddragon.leagueoflegends.com/cdn/img/champion/loading/\",\r\n  CHAMPION_IMG_URL: \"https://ddragon.leagueoflegends.com/cdn/{version}/img/champion/\",\r\n  CHAMPION_INFO_URL: \"https://ddragon.leagueoflegends.com/cdn/{version}/data/es_AR/champion/\"\r\n}\r\n\r\nasync function getGameVersion() {\r\n  let resp = await fetch(Constants.VERSION_URL)\r\n  let versions = await resp.json();\r\n  return versions[0];\r\n}\r\n\r\nasync function getChampionsURL(gameVersion) {\r\n  return replaceVersion(Constants.CHAMPIONS_URL, gameVersion);\r\n}\r\n\r\nfunction replaceVersion(url, version) {\r\n  return url.replace(\"{version}\", version);\r\n}\r\n\r\nfunction parseChampionsToArray(championsObj) {\r\n  let array = [];\r\n  let keys = Object.keys(championsObj.data);\r\n  keys.forEach(k => {\r\n    array.push({ ...championsObj.data[k] })\r\n  })\r\n  return array;\r\n}\r\n\r\n/**\r\n * @returns {Promise<Champion[]>}\r\n */\r\nasync function getChampions() {\r\n  let version = await getGameVersion();\r\n  let url = await getChampionsURL(version);\r\n  let resp = await fetch(url);\r\n  let data = await resp.json();\r\n  let champions = parseChampionsToArray(data);\r\n  return champions;\r\n}\r\n\r\nexport { Constants, getChampions, replaceVersion }","/**\r\n * @typedef {Object} ChampionMinData\r\n * @property {String} title - name of the champion\r\n * @property {String} description - little description of the champion\r\n * @property {String} image - file name of the champion's image\r\n */\r\n\r\nimport { Constants, replaceVersion } from '../services/riot'\r\nimport { Champion } from '../services/riot'; // eslint-disable-line no-unused-vars\r\n\r\n/**\r\n * @param {Champion} champion\r\n * @returns {URL}\r\n */\r\n\r\nfunction getChampionImageURL(champion) {\r\n  let gameVersion = champion.version\r\n  let championImageFile = champion.image.full\r\n  return replaceVersion(Constants.CHAMPION_IMG_URL, gameVersion) + championImageFile\r\n}\r\n\r\nfunction getChampionLoadingImageURL(champion) {\r\n  return Constants.CHAMPION_LOADING_IMG_URL + champion.id + '_0.jpg'\r\n}\r\n\r\n/**\r\n * @param {Champion[]} champions \r\n * @returns {ChampionMinData[]}\r\n */\r\nfunction retrieveListData(champions) {\r\n  let data = []\r\n  champions.forEach(c => {\r\n    data.push({\r\n      title: c.name,\r\n      description: c.title.charAt(0).toUpperCase() + c.title.slice(1),\r\n      image: getChampionImageURL(c),\r\n      version: c.version,\r\n      id: c.id\r\n    })\r\n  });\r\n  return data\r\n}\r\n\r\nexport { getChampionImageURL, getChampionLoadingImageURL }\r\nexport default retrieveListData","const Types = {\r\n  \"OPEN_PORTAL\": \"open portal\",\r\n  \"CLOSE_PORTAL\": \"close portal\",\r\n}\r\n\r\nexport default function portalReducer(state, action) {\r\n  switch (action.type) {\r\n    case Types.OPEN_PORTAL:\r\n      return { isOpen: true, champion: action.champion }\r\n    case Types.CLOSE_PORTAL:\r\n      return { isOpen: false, champion: null }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { Types }\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport ChampionsContext from '../../contexts/ChampionsContext'\r\nimport { Types } from '../../reducers/portalReducer'\r\nimport { Header, Icon, Transition } from 'semantic-ui-react'\r\nimport { Constants, replaceVersion } from '../../services/riot'\r\nimport './ChampionInfo.css'\r\nimport { getChampionLoadingImageURL } from '../../utils/championsData'\r\n\r\n/**\r\n * \r\n * @param {Object} champion\r\n * @param {String} champion.championName\r\n * @param {String} champion.championVersion\r\n * @param {String[]} champion.championTags\r\n * @param {URL} champion.championImgURL\r\n * @returns {JSX.Element}\r\n */\r\nexport default function ChampionInfo({ champion }) {\r\n  const { portalDispatch } = useContext(ChampionsContext)\r\n  const [data, setData] = useState({})\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = 'hidden' ;\r\n    return () => {\r\n      body.style.overflow = '';\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"champion-info-portal\">\r\n      {champion &&\r\n        <>\r\n          <div className=\"champion-info-buttons\">\r\n            <Icon name=\"arrow left\" onClick={() => portalDispatch({ type: Types.CLOSE_PORTAL })} />\r\n            <Icon name=\"heart\" color='red' />\r\n          </div>\r\n          <div className=\"champion-info-simple\">\r\n            <div className=\"champion-info-simple-principal\">\r\n              <Header size=\"huge\" as=\"p\">\r\n                {champion.name}\r\n              </Header>\r\n              <Header size=\"medium\" as=\"p\">\r\n                {\"v\" + champion.version}\r\n              </Header>\r\n            </div>\r\n            <div className=\"champion-info-simple-tags\">\r\n              {champion.tags.map((tag, i) => <span className=\"champion-tag\" key={i}>{tag}</span>)}\r\n            </div>\r\n            <Transition>\r\n              <img style={{ alignSelf: \"center\" }} src={getChampionLoadingImageURL(champion)} alt={champion.name} />\r\n            </Transition>\r\n          </div>\r\n          <div className=\"champion-info-stats\">\r\n\r\n          </div>\r\n        </>}\r\n    </div>\r\n  )\r\n}","import { createContext, useState, useEffect, useReducer } from 'react';\r\nimport { TransitionablePortal } from 'semantic-ui-react';\r\nimport ChampionInfo from '../components/ChampionInfo';\r\nimport { getChampions } from '../services/riot';\r\nimport portalReducer from '../reducers/portalReducer';\r\n\r\nconst ChampionsContext = createContext();\r\n\r\nconst initialChampionsState = []\r\nconst initialPortalState = { isOpen: false, champion: null }\r\n\r\nfunction ChampionsProvider({ children }) {\r\n  const [champions, setChampions] = useState(initialChampionsState)\r\n  const [portal, portalDispatch] = useReducer(portalReducer, initialPortalState)\r\n\r\n  useEffect(() => {\r\n    async function fillData() {\r\n      setTimeout(async () => {\r\n        let champions = await getChampions();\r\n        // console.log('champions:', champions);\r\n        setChampions(champions);\r\n      }, 200);\r\n    }\r\n    fillData();\r\n  }, [])\r\n\r\n  return (\r\n    <ChampionsContext.Provider value={{ champions, portalDispatch }}>\r\n      {children}\r\n      <TransitionablePortal\r\n        transition={{animation: \"fly left\", duration: 900}}\r\n        open={portal.isOpen}>\r\n        <div id=\"champion-portal\">\r\n          <ChampionInfo champion={portal.champion} />\r\n        </div>\r\n      </TransitionablePortal>\r\n    </ChampionsContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ChampionsProvider }\r\nexport default ChampionsContext\r\n\r\n","import React, { useContext, useState } from 'react'\r\nimport Logo from '../../assets/banner.png'\r\nimport { Grid, Search } from 'semantic-ui-react'\r\nimport retrieveListData from '../../utils/championsData'\r\nimport ChampionsContext from '../../contexts/ChampionsContext'\r\nimport { Constants, replaceVersion } from '../../services/riot'\r\nimport { Types } from '../../reducers/portalReducer'\r\nimport './Searcher.css'\r\n\r\nexport default function Searcher() {\r\n  const context = useContext(ChampionsContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const champions = retrieveListData(context.champions);\r\n  const { portalDispatch } = context;\r\n\r\n  const openChampionInfo = async (e, search) => {\r\n    let champion = search.result;\r\n    let resp = await fetch(replaceVersion(Constants.CHAMPION_INFO_URL, champion.version) + champion.id + '.json');\r\n    let data = await resp.json();\r\n    portalDispatch({ type: Types.OPEN_PORTAL, champion: {...data.data[champion.id], version: data.version } })\r\n  }\r\n\r\n  const handleChampionSearch = (e) => {\r\n    setValue(e.target.value)\r\n    setIsLoading(true)\r\n    if (e.target.value === \"\") {\r\n      setResults([])\r\n      setIsLoading(false)\r\n    } else {\r\n      setTimeout(() => {\r\n        let results = champions.filter(c => c.title.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1).splice(0, 6)\r\n        setResults(results)\r\n        setIsLoading(false);\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid className=\"searcher_box\" stackable>\r\n      <Grid.Column width={4}>\r\n      </Grid.Column>\r\n      <Grid.Column width={8}>\r\n        <div className=\"banner\">\r\n          <img src={Logo} alt=\"Logo\" />\r\n          <h1 hidden>League Of Stats</h1>\r\n          <Search\r\n            minCharacters={2}\r\n            loading={isLoading}\r\n            onSearchChange={handleChampionSearch}\r\n            results={results}\r\n            noResultsMessage=\"No hay resultados 😥\"\r\n            onResultSelect={openChampionInfo}\r\n            value={value}\r\n            fluid\r\n          />\r\n        </div>\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { Grid, Ref } from 'semantic-ui-react'\r\nimport { Champion, Constants, replaceVersion } from '../../services/riot' // eslint-disable-line no-unused-vars\r\nimport { getChampionImageURL } from '../../utils/championsData'\r\nimport ChampionsContext from '../../contexts/ChampionsContext'\r\nimport { Types } from '../../reducers/portalReducer'\r\nimport Fac from 'fast-average-color'\r\nimport './ChampionItem.css'\r\n\r\nconst FastAverageColor = new Fac();\r\n\r\n/**\r\n * @param {Object} Object\r\n * @param {Champion} Object.champion\r\n * @returns {JSX.Element}\r\n */\r\nexport default function ChampionItem({ champion }) {\r\n  const { portalDispatch } = useContext(ChampionsContext);\r\n  const nameTag = useRef();\r\n  const card = useRef();\r\n\r\n  useEffect(() => {\r\n    async function getColor() {\r\n      nameTag.current.style.transition = \"color 1s linear\"\r\n      let color = await FastAverageColor.getColorAsync(getChampionImageURL(champion))\r\n      card.current.style.boxShadow = `${color.rgba} 0px 10px 50px 0px inset, rgba(0, 0, 0, 0.3) 10px 18px 36px -18px inset`;\r\n    }\r\n    getColor();\r\n  }, [])\r\n\r\n\r\n  const openChampionInfo = async () => {\r\n    let resp = await fetch(replaceVersion(Constants.CHAMPION_INFO_URL, champion.version) + champion.id + \".json\");\r\n    let data = await resp.json();\r\n    portalDispatch({\r\n      type: Types.OPEN_PORTAL,\r\n      champion: { ...data.data[champion.id], version: champion.version }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Ref innerRef={card}>\r\n      <Grid.Column className=\"champion-card\" onClick={openChampionInfo}>\r\n        <div className=\"champion-name\">\r\n          <span className=\"champion-name-tag\" ref={nameTag}>{champion.name}</span>\r\n        </div>\r\n        <div className=\"champion-info\">\r\n          <div className=\"champion-info-lanes\">\r\n            {champion.tags.map((tag, i) => <span className=\"champion-tag\" key={i}>{tag}</span>)}\r\n          </div>\r\n          <div className=\"champion-info-image\">\r\n            <img src={getChampionImageURL(champion)} alt={champion.name} />\r\n          </div>\r\n        </div>\r\n      </Grid.Column>\r\n    </Ref>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Grid, Placeholder, PlaceholderImage } from 'semantic-ui-react'\r\nimport '../ChampionItem/ChampionItem.css'\r\n\r\nexport default function ChampionItemPlaceholder() {\r\n  return (\r\n    <>\r\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,].map(i => (\r\n        <Grid.Column className=\"champion-card\" key={i}>\r\n          <div className=\"champion-name\">\r\n            <span className=\"champion-name-tag\">\r\n              <Placeholder as=\"div\" />\r\n            </span>\r\n          </div>\r\n          <div className=\"champion-info\">\r\n            <div className=\"champion-info-lanes\">\r\n              <span className=\"champion-tag-placeholder\">\r\n                <Placeholder as=\"div\" />\r\n              </span>\r\n              <span className=\"champion-tag-placeholder\">\r\n                <Placeholder as=\"div\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"champion-info-image\">\r\n              <Placeholder>\r\n                <PlaceholderImage as=\"div\" />\r\n              </Placeholder>\r\n            </div>\r\n          </div>\r\n\r\n        </Grid.Column>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport ChampionsContext from '../../contexts/ChampionsContext'\r\nimport ChampionItem from '../ChampionItem'\r\nimport ChampionsItemsPlaceholder from '../ChampionsItemsPlaceholder'\r\nimport './ChampionsTable.css'\r\n\r\nexport default function ChampionsTable() {\r\n  const { champions } = useContext(ChampionsContext);\r\n  return (\r\n    <Grid doubling centered columns={5} className=\"champions-table\">\r\n      {champions.length === 0\r\n        ? <ChampionsItemsPlaceholder />\r\n        : champions.map(c => <ChampionItem champion={c} key={c.name} />)}\r\n    </Grid>\r\n  )\r\n}\r\n","import './App.css';\n\nimport Searcher from './components/Searcher';\nimport ChampionsTable from './components/ChampionsTable';\nimport { ChampionsProvider } from './contexts/ChampionsContext';\n\nfunction App() {\n  return (\n    <ChampionsProvider>\n      <div id=\"LOS\">\n        <Searcher />\n        <ChampionsTable />\n      </div>\n    </ChampionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}